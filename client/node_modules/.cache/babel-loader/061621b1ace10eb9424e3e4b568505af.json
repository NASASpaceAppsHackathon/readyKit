{"ast":null,"code":"import _classCallCheck from \"/Users/hyeyeonshin/Documents/readyKit/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hyeyeonshin/Documents/readyKit/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hyeyeonshin/Documents/readyKit/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hyeyeonshin/Documents/readyKit/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hyeyeonshin/Documents/readyKit/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/hyeyeonshin/Documents/readyKit/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/hyeyeonshin/Documents/readyKit/client/src/components/checklist.js\";\nimport React, { Component } from 'react';\nimport style from './checklist.module.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport jsonData from '../database/checklist.json';\nimport axios from \"axios\";\n/**\r\n * How to use this component:\r\n * <Checklist title=\"My Checklist\"\r\n              list_id=\"earthquake\"           // must match one of the 4 IDs in checklist.json\r\n              />\r\n */\n\nvar Checklist =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Checklist, _Component);\n\n  function Checklist(props) {\n    var _this;\n\n    _classCallCheck(this, Checklist);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Checklist).call(this, props));\n\n    var thisObj = _assertThisInitialized(_assertThisInitialized(_this));\n\n    _this.state = {\n      list: jsonData[_this.props.list_id]\n    };\n    return _this;\n  }\n\n  _createClass(Checklist, [{\n    key: \"render\",\n    value: function render() {\n      var thisObj = this;\n      var list = [];\n\n      function changeText(event, i) {\n        var list_items = thisObj.state.list;\n\n        for (var j = 0; j < thisObj.state.list.length; j++) {\n          if (j === i) {\n            list_items[j] = event.target.value;\n          }\n        }\n\n        thisObj.setState({\n          list: list_items\n        });\n      }\n\n      function showList() {\n        // add all list items \n        console.log('showlist');\n        var i = 0;\n        jsonData[thisObj.props.list_id].forEach(function (item) {\n          var index = i;\n          list.push(React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          })), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"text\",\n            value: thisObj.state.list[index],\n            onChange: function onChange(e) {\n              return changeText(e, index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }))));\n          i++;\n        });\n      } // add an empty row to list\n\n\n      function addNew() {\n        console.log('add new');\n        var item = document.createElement(\"tr\");\n        item.innerHTML = '<td><input type=\"checkbox\"/></td><td><input type=\"text\"/></td>';\n        document.getElementById(\"list-items\").appendChild(item);\n      } // save list into checklist.json file\n\n\n      function saveList() {\n        console.log('save');\n        jsonData[thisObj.props.list_id] = [];\n        var items = document.getElementsByTagName(\"td\");\n        console.log(items);\n\n        for (var i = 1; i < items.length; i += 2) {\n          console.log(items[i]);\n          var input_value = items[i].getElementsByTagName('input')[0].value;\n          jsonData[thisObj.props.list_id].push(input_value);\n        }\n\n        console.log(jsonData[thisObj.props.list_id]);\n        console.log(jsonData);\n      }\n\n      showList();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: style.listTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        id: \"list-items\",\n        className: style.listItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, list)), React.createElement(\"button\", {\n        onClick: addNew,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Add new\"), React.createElement(\"button\", {\n        onClick: saveList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Save\"));\n    }\n  }]);\n\n  return Checklist;\n}(Component);\n\nexport default Checklist;","map":{"version":3,"sources":["/Users/hyeyeonshin/Documents/readyKit/client/src/components/checklist.js"],"names":["React","Component","style","library","FontAwesomeIcon","jsonData","axios","Checklist","props","thisObj","state","list","list_id","changeText","event","i","list_items","j","length","target","value","setState","showList","console","log","forEach","item","index","push","e","addNew","document","createElement","innerHTML","getElementById","appendChild","saveList","items","getElementsByTagName","input_value","listTitle","title","listItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport style from './checklist.module.css'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport jsonData from '../database/checklist.json'\r\nimport axios from \"axios\"\r\n\r\n/**\r\n * How to use this component:\r\n * <Checklist title=\"My Checklist\"\r\n              list_id=\"earthquake\"           // must match one of the 4 IDs in checklist.json\r\n              />\r\n */\r\n\r\nclass Checklist extends Component {  \r\n    constructor(props) {\r\n        super(props);\r\n        let thisObj = this;\r\n        this.state = {\r\n            list : jsonData[this.props.list_id]\r\n          };\r\n    }\r\n\r\n    render() {\r\n        let thisObj = this;\r\n        let list = [];\r\n\r\n        function changeText(event, i) {\r\n            let list_items = thisObj.state.list;\r\n            for (let j = 0; j < thisObj.state.list.length; j++) {\r\n                if (j === i) {\r\n                    list_items[j] = event.target.value;\r\n                }\r\n            }\r\n            thisObj.setState({\r\n                list : list_items\r\n            });\r\n        }\r\n\r\n        function showList () { // add all list items \r\n            console.log('showlist');\r\n            let i = 0;\r\n            jsonData[thisObj.props.list_id].forEach (item => {\r\n                const index = i;\r\n                list.push(\r\n                    <tr>\r\n                        <td><input type=\"checkbox\"/></td>\r\n                        <td><input type=\"text\" value={thisObj.state.list[index]} onChange={(e) => changeText(e,index)}/></td>\r\n                    </tr>);\r\n                i++;\r\n            });\r\n        }        \r\n\r\n        // add an empty row to list\r\n        function addNew () {\r\n            console.log('add new');\r\n            let item = document.createElement(\"tr\");\r\n            item.innerHTML = '<td><input type=\"checkbox\"/></td><td><input type=\"text\"/></td>';\r\n            document.getElementById(\"list-items\").appendChild(item);\r\n        }        \r\n\r\n        // save list into checklist.json file\r\n        function saveList () {\r\n            console.log('save');\r\n            jsonData[thisObj.props.list_id] = [];\r\n            \r\n            let items = document.getElementsByTagName(\"td\");\r\n            console.log(items);\r\n\r\n            for (let i = 1; i < items.length; i += 2) {\r\n                console.log(items[i]);\r\n                let input_value = items[i].getElementsByTagName('input')[0].value;\r\n                jsonData[thisObj.props.list_id].push(input_value);\r\n            }\r\n            console.log(jsonData[thisObj.props.list_id]);\r\n            console.log(jsonData);\r\n        }\r\n\r\n        showList();\r\n\r\n        return (\r\n        <div>\r\n            <div className={style.listTitle}>{this.props.title}</div>\r\n            <table>\r\n            <tbody id=\"list-items\" className={style.listItem}>{list}</tbody>\r\n            </table>\r\n            <button onClick={addNew}>Add new</button>\r\n            <button onClick={saveList}>Save</button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  \r\nexport default Checklist"]},"metadata":{},"sourceType":"module"}